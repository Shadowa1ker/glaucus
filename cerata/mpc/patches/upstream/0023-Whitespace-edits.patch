From de9756c79008d1be79a19e0e761753ef2b8b2bd1 Mon Sep 17 00:00:00 2001
From: Andreas Enge <andreas.enge@inria.fr>
Date: Thu, 22 Nov 2018 10:51:29 +0100
Subject: [PATCH 23/29] Whitespace edits.

* src/mul.c: Replace tabs by 8 spaces.
---
 src/mul.c | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/mul.c b/src/mul.c
index bd01212..61092e5 100644
--- a/src/mul.c
+++ b/src/mul.c
@@ -5,7 +5,7 @@ Copyright (C) 2002, 2004, 2005, 2008, 2009, 2010, 2011, 2012, 2016 INRIA
 This file is part of GNU MPC.
 
 GNU MPC is free software; you can redistribute it and/or modify it under
-the terms of the GNU Lesser General Public License as published by the
+        he terms of the GNU Lesser General Public License as published by the
 Free Software Foundation; either version 3 of the License, or (at your
 option) any later version.
 
@@ -541,22 +541,22 @@ mpc_mul_karatsuba (mpc_ptr rop, mpc_srcptr op1, mpc_srcptr op2, mpc_rnd_t rnd)
          inexact |= mpfr_mul (u, u, x, MPFR_RNDA);
             /* (a+b)*(c-d) */
 
-	 /* if all computations are exact up to here, it may be that
-	    the real part is exact, thus we need if possible to
-	    compute v - w exactly */
-	 if (inexact == 0)
-	   {
-	     mpfr_prec_t prec_x;
+         /* if all computations are exact up to here, it may be that
+            the real part is exact, thus we need if possible to
+            compute v - w exactly */
+         if (inexact == 0)
+           {
+             mpfr_prec_t prec_x;
              /* v and w are different from 0, so mpfr_get_exp is safe to use */
              prec_x = SAFE_ABS (mpfr_exp_t, mpfr_get_exp (v) - mpfr_get_exp (w))
                       + MPC_MAX (prec_v, prec_w) + 1;
                       /* +1 is necessary for a potential carry */
-	     /* ensure we do not use a too large precision */
-	     if (prec_x > prec_u)
+             /* ensure we do not use a too large precision */
+             if (prec_x > prec_u)
                prec_x = prec_u;
-	     if (prec_x > prec)
-	       mpfr_prec_round (x, prec_x, MPFR_RNDN);
-	   }
+             if (prec_x > prec)
+               mpfr_prec_round (x, prec_x, MPFR_RNDN);
+           }
 
          rnd_u = (sign_u > 0) ? MPFR_RNDU : MPFR_RNDD;
          inexact |= mpfr_sub (x, v, w, rnd_u); /* ad - bc */
-- 
2.25.0

