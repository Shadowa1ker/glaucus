# Copyright (c) 2019, Firas Khalil Khana
# Distributed under the terms of the ISC License

# Voyager: Firas Khalil Khana (firasuke) <firasuke@gmail.com>

# prepare
rsync -vah $CERD/$name/$name $XSRC --delete --exclude=.$version
cd $XSRC/$name

# configure

# mini-gmp has less memory footprint and is smaller than GMP but is slower (up
# to 10 times slower in some cases). You should never install mini-gmp as
# applications can either include `mini-gmp.c` or compile it and use the
# declarations in `mini-gmp.h`

# gmp's configure script is stupid and won't accept target alone if we're
# cross-compiling; hence, both host needs to be added, and be given the same
# value of target which is $TUPL, and build which is given the value of $GUPL to
# indicate that we're cross-compiling. (The easiest solution would be to remove
# build/host/target alltogether, but meh...)

# `--with-sysroot=$CRSS/$TUPL` was added to get the same effect when passing
# sysroot to GCC's configure script while using the in tree gmp.
./.bootstrap

# gmp_1 doesn't have cxx support since it's used for the static stage 1 GCC, and
# gmp_2 needs `CC=gcc` to be passed as it'll build with the static stage 1 GCC
# without it, which is not what we want (this would cause problems regarding
# libc.so not being found, and not being able to ldd all GCC's prerequisites
# and lots of build errors involving /usr/lib/libc.so.6 no being found).
case $ceras in
  gmp_1)
    ./configure \
      --prefix=$CRSS \
      --build=$GUPL \
      --host=$TUPL \
      --target=$TUPL \
      --disable-static \
      --with-sysroot=$CRSS/$TUPL
    ;;
  gmp_2)
    CC=gcc \
    ./configure \
      --prefix=$CRSS \
      --build=$GUPL \
      --host=$TUPL \
      --target=$TUPL \
      --enable-cxx \
      --disable-static \
      --with-sysroot=$CRSS/$TUPL
    ;;
esac

# build
make

# install
make \
  install-strip
