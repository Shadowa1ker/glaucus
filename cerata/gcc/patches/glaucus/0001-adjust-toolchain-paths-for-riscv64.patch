--- gcc/config/linux.h
+++ gcc/config/linux.h
@@ -94,19 +94,19 @@
    GLIBC_DYNAMIC_LINKER must be defined for each target using them, or
    GLIBC_DYNAMIC_LINKER32 and GLIBC_DYNAMIC_LINKER64 for targets
    supporting both 32-bit and 64-bit compilation.  */
-#define UCLIBC_DYNAMIC_LINKER "/lib/ld-uClibc.so.0"
-#define UCLIBC_DYNAMIC_LINKER32 "/lib/ld-uClibc.so.0"
-#define UCLIBC_DYNAMIC_LINKER64 "/lib/ld64-uClibc.so.0"
-#define UCLIBC_DYNAMIC_LINKERX32 "/lib/ldx32-uClibc.so.0"
+#define UCLIBC_DYNAMIC_LINKER "/toolchain/lib/ld-uClibc.so.0"
+#define UCLIBC_DYNAMIC_LINKER32 "/toolchian/lib/ld-uClibc.so.0"
+#define UCLIBC_DYNAMIC_LINKER64 "/toolchain/lib/ld64-uClibc.so.0"
+#define UCLIBC_DYNAMIC_LINKERX32 "/toolchain/lib/ldx32-uClibc.so.0"
 #define BIONIC_DYNAMIC_LINKER "/system/bin/linker"
 #define BIONIC_DYNAMIC_LINKER32 "/system/bin/linker"
 #define BIONIC_DYNAMIC_LINKER64 "/system/bin/linker64"
 #define BIONIC_DYNAMIC_LINKERX32 "/system/bin/linkerx32"
 /* Should be redefined for each target that supports musl.  */
-#define MUSL_DYNAMIC_LINKER "/dev/null"
-#define MUSL_DYNAMIC_LINKER32 "/dev/null"
-#define MUSL_DYNAMIC_LINKER64 "/dev/null"
-#define MUSL_DYNAMIC_LINKERX32 "/dev/null"
+#define MUSL_DYNAMIC_LINKER "/toolchain/lib/ld-musl-riscv32.so.1"
+#define MUSL_DYNAMIC_LINKER32 "/toolchain/lib/ld-musl-riscv32.so.1"
+#define MUSL_DYNAMIC_LINKER64 "/toolchain/lib/ld-musl-riscv64.so.1"
+#define MUSL_DYNAMIC_LINKERX32 "/toolchain/lib/ld-musl-riscv64-ilp32d.so.1"
 
 #define GNU_USER_DYNAMIC_LINKER						\
   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER,	\
@@ -221,3 +221,9 @@
 # define TARGET_LIBC_HAS_FUNCTION linux_libc_has_function
 
 #endif
+
+#undef STANDARD_STARTFILE_PREFIX_1
+#define STANDARD_STARTFILE_PREFIX_1 "/toolchain/lib/"
+
+#undef STANDARD_STARTFILE_PREFIX_2
+#define STANDARD_STARTFILE_PREFIX_2 ""
--- gcc/config/riscv/linux.h
+++ gcc/config/riscv/linux.h
@@ -22,7 +22,7 @@
     GNU_USER_TARGET_OS_CPP_BUILTINS();				\
   } while (0)
 
-#define GLIBC_DYNAMIC_LINKER "/lib/ld-linux-riscv" XLEN_SPEC "-" ABI_SPEC ".so.1"
+#define GLIBC_DYNAMIC_LINKER "/toolchain/lib/ld-linux-riscv" XLEN_SPEC "-" ABI_SPEC ".so.1"
 
 #define MUSL_ABI_SUFFIX \
   "%{mabi=ilp32:-sf}" \
@@ -33,7 +33,7 @@
   "%{mabi=lp64d:}"
 
 #undef MUSL_DYNAMIC_LINKER
-#define MUSL_DYNAMIC_LINKER "/lib/ld-musl-riscv" XLEN_SPEC MUSL_ABI_SUFFIX ".so.1"
+#define MUSL_DYNAMIC_LINKER "/toolchain/lib/ld-musl-riscv" XLEN_SPEC MUSL_ABI_SUFFIX ".so.1"
 
 /* Because RISC-V only has word-sized atomics, it requries libatomic where
    others do not.  So link libatomic by default, as needed.  */
@@ -68,3 +68,9 @@
     %{static:-static}}"
 
 #define TARGET_ASM_FILE_END file_end_indicate_exec_stack
+
+#undef STANDARD_STARTFILE_PREFIX_1
+#define STANDARD_STARTFILE_PREFIX_1 "/toolchain/lib/"
+
+#undef STANDARD_STARTFILE_PREFIX_2
+#define STANDARD_STARTFILE_PREFIX_2 ""
--- gcc/config/riscv/riscv.h
+++ gcc/config/riscv/riscv.h
@@ -883,10 +883,8 @@
   "%{mabi=lp64d:lp64d}" \
 
 #define STARTFILE_PREFIX_SPEC 			\
-   "/lib" XLEN_SPEC "/" ABI_SPEC "/ "		\
-   "/usr/lib" XLEN_SPEC "/" ABI_SPEC "/ "	\
-   "/lib/ "					\
-   "/usr/lib/ "
+   "/toolchain/lib" XLEN_SPEC "/" ABI_SPEC "/ "		\
+   "/toolchain/lib/ "
 
 /* ISA constants needed for code generation.  */
 #define OPCODE_LW    0x2003
