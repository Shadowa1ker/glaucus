--- gcc/config/linux.h
+++ gcc/config/linux.h
@@ -94,19 +94,19 @@
    GLIBC_DYNAMIC_LINKER must be defined for each target using them, or
    GLIBC_DYNAMIC_LINKER32 and GLIBC_DYNAMIC_LINKER64 for targets
    supporting both 32-bit and 64-bit compilation.  */
-#define UCLIBC_DYNAMIC_LINKER "/lib/ld-uClibc.so.0"
-#define UCLIBC_DYNAMIC_LINKER32 "/lib/ld-uClibc.so.0"
-#define UCLIBC_DYNAMIC_LINKER64 "/lib/ld64-uClibc.so.0"
-#define UCLIBC_DYNAMIC_LINKERX32 "/lib/ldx32-uClibc.so.0"
+#define UCLIBC_DYNAMIC_LINKER "/usr/lib/ld-uClibc.so.0"
+#define UCLIBC_DYNAMIC_LINKER32 "/usr/lib/ld-uClibc.so.0"
+#define UCLIBC_DYNAMIC_LINKER64 "/usr/lib/ld64-uClibc.so.0"
+#define UCLIBC_DYNAMIC_LINKERX32 "/usr/lib/ldx32-uClibc.so.0"
 #define BIONIC_DYNAMIC_LINKER "/system/bin/linker"
 #define BIONIC_DYNAMIC_LINKER32 "/system/bin/linker"
 #define BIONIC_DYNAMIC_LINKER64 "/system/bin/linker64"
 #define BIONIC_DYNAMIC_LINKERX32 "/system/bin/linkerx32"
 /* Should be redefined for each target that supports musl.  */
-#define MUSL_DYNAMIC_LINKER "/dev/null"
-#define MUSL_DYNAMIC_LINKER32 "/dev/null"
-#define MUSL_DYNAMIC_LINKER64 "/dev/null"
-#define MUSL_DYNAMIC_LINKERX32 "/dev/null"
+#define MUSL_DYNAMIC_LINKER "/usr/lib/ld-musl-riscv32.so.1"
+#define MUSL_DYNAMIC_LINKER32 "/usr/lib/ld-musl-riscv32.so.1"
+#define MUSL_DYNAMIC_LINKER64 "/usr/lib/ld-musl-riscv64.so.1"
+#define MUSL_DYNAMIC_LINKERX32 "/usr/lib/ld-musl-riscv64-ilp32d.so.1"
 
 #define GNU_USER_DYNAMIC_LINKER						\
   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER,	\
--- gcc/config/riscv/linux.h
+++ gcc/config/riscv/linux.h
@@ -22,7 +22,7 @@
     GNU_USER_TARGET_OS_CPP_BUILTINS();				\
   } while (0)
 
-#define GLIBC_DYNAMIC_LINKER "/lib/ld-linux-riscv" XLEN_SPEC "-" ABI_SPEC ".so.1"
+#define GLIBC_DYNAMIC_LINKER "/usr/lib/ld-linux-riscv" XLEN_SPEC "-" ABI_SPEC ".so.1"
 
 #define MUSL_ABI_SUFFIX \
   "%{mabi=ilp32:-sf}" \
@@ -33,7 +33,7 @@
   "%{mabi=lp64d:}"
 
 #undef MUSL_DYNAMIC_LINKER
-#define MUSL_DYNAMIC_LINKER "/lib/ld-musl-riscv" XLEN_SPEC MUSL_ABI_SUFFIX ".so.1"
+#define MUSL_DYNAMIC_LINKER "/usr/lib/ld-musl-riscv" XLEN_SPEC MUSL_ABI_SUFFIX ".so.1"
 
 /* Because RISC-V only has word-sized atomics, it requries libatomic where
    others do not.  So link libatomic by default, as needed.  */
--- gcc/config/riscv/riscv.h
+++ gcc/config/riscv/riscv.h
@@ -883,9 +883,7 @@
   "%{mabi=lp64d:lp64d}" \
 
 #define STARTFILE_PREFIX_SPEC 			\
-   "/lib" XLEN_SPEC "/" ABI_SPEC "/ "		\
    "/usr/lib" XLEN_SPEC "/" ABI_SPEC "/ "	\
-   "/lib/ "					\
    "/usr/lib/ "
 
 /* ISA constants needed for code generation.  */
--- gcc/config/riscv/t-linux
+++ gcc/config/riscv/t-linux
@@ -1,3 +1,3 @@
 # Only XLEN and ABI affect Linux multilib dir names, e.g. /lib32/ilp32d/
-MULTILIB_DIRNAMES := $(patsubst rv32%,lib32,$(patsubst rv64%,lib64,$(MULTILIB_DIRNAMES)))
+MULTILIB_DIRNAMES := $(patsubst rv32%,lib32,$(patsubst rv64%,lib,$(MULTILIB_DIRNAMES)))
 MULTILIB_OSDIRNAMES := $(patsubst lib%,../lib%,$(MULTILIB_DIRNAMES))
--- gcc/config/riscv/t-withmultilib
+++ gcc/config/riscv/t-withmultilib
@@ -1,6 +1,6 @@
 comma=,
 MULTILIB_OPTIONS = $(subst lp64,mabi=lp64,$(subst ilp32,mabi=ilp32,$(subst rv,march=rv,$(subst $(comma), ,$(TM_MULTILIB_CONFIG)))))
-MULTILIB_DIRNAMES = $(patsubst rv32%,lib32,$(patsubst rv64%,lib64,$(subst $(comma), ,$(TM_MULTILIB_CONFIG))))
+MULTILIB_DIRNAMES = $(patsubst rv32%,lib32,$(patsubst rv64%,lib,$(subst $(comma), ,$(TM_MULTILIB_CONFIG))))
 MULTILIB_OSDIRNAMES = $(subst lib,../lib,$(MULTILIB_DIRNAMES))
 MULTILIB_REQUIRED   = $(subst lp64,mabi=lp64,$(subst ilp32,mabi=ilp32,$(subst rv,march=rv,$(subst $(comma),/,$(TM_MULTILIB_CONFIG)))))
 MULTILIB_REUSE =
